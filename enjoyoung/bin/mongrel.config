#!/usr/bin/perl

use strict;
#use File::Basename;

my $app = '/usr/local/webservice/htdocs/enjoyoung';
my $user = 'mongrel';
my $group = 'mongrel';
my $run_servers = '3';
my $start_port = '3000';
my $listen_ip ='127.0.0.1';
my $app_env = 'production';

sub user_input {
	my ($words,$default) = @_;
	my $loop = 1;   
	while ($loop){ 
		print "$words";
		my $input = <STDIN>;
		chomp $input;
		if ( $input =~ /\w+/ ) {
			$loop = 0;
			return $input;
		} else {
			if  ($default =~ /\w+/) {
				$loop = 0;
				return $default; 
			}
		} 
	}
}

print "Configure Mongrel::Cluster\n";

$app = user_input("App deploy path: (Default: $app)",$app);
$app_env = user_input("App deploy environment: (Default: $app_env)",$app_env);
$user = user_input("Mongrel running as user: (Default: $user)",$user);
$group = user_input("Mongrel running as group: (Default: $group)",$group);
$listen_ip = user_input("Mongrel listen ip: (Default: $listen_ip)",$listen_ip);
$start_port = user_input("Mongrel start port: (Default: $start_port)",$start_port);
$run_servers = user_input("How many server to start for mongrel: (Default: $run_servers)",$run_servers);

if ( `grep -c $group /etc/group` == 0 ) {
	print "Add $group\n";
	`groupadd $group`;
} 

if (`grep -c $user /etc/passwd` == 0 ) {
	print "Add $user\nInput $user password\n";
	`useradd -m -d $app -g $group $user && passwd $user`;
}

mkdir ($app) unless (-d $app);
mkdir ("${app}/config") unless (-d "${app}/config");
`chown -R $user:$group $app`;

chdir $app;

my $run = system "mongrel_rails cluster::configure -e $app_env -p $start_port -N $run_servers -c $app -a $listen_ip  --user $user --group $group";
if (($run) || (! -f "${app}/config/mongrel_cluster.yml")) {
	die "Mongrel Cluster configure failed, command return $run\n";
}
system "cat ${app}/config/mongrel_cluster.yml";
print "Mongrel Cluster configure successed\n";
